name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:

  # ""
  test:
    strategy:
      fail-fast: true
      matrix:
        version: [6.2.4-ubuntu-18.04, ]
        include:
          - networkVersion: "2.5.0" # https://www.powershellgallery.com/packages/Az.Network/2.5.0/Content/Az.Network.psm1
            version: 6.2.4-ubuntu-18.04

    runs-on: ubuntu-22.04
    container: mcr.microsoft.com/powershell:${{ matrix.version }}
    steps:
      - uses: actions/checkout@v3

      - name: Install Pester Module
        run: |
          $ErrorActionPreference = 'Stop'
          Set-PSRepository -Name PSGallery -InstallationPolicy Trusted
          Install-Module Pester -Scope CurrentUser -Repository PSGallery -Force
          Install-Module -Name Az.Network -requiredVersion ${{ matrix.networkVersion }} -Scope CurrentUser -Repository PSGallery -Force -Verbose

          Get-InstalledModule
        shell: pwsh -Command "$ProgressPreference = 'SilentlyContinue'; & '{0}'"

      - name: Run Pester Tests
        run: |
          Import-Module Pester

          $cfg = [PesterConfiguration]::Default
          $cfg.Output.Verbosity = 'Detailed'
          $cfg.CodeCoverage.Enabled = $true
          $cfg.Run.Exit = $true

          Invoke-Pester -Configuration $cfg
        shell: pwsh -Command "$ProgressPreference = 'SilentlyContinue'; & '{0}'"

  publish:
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    needs:
      - test
    steps:
      - uses: actions/checkout@v3

      - run: |
          Set-PSRepository -Name PSGallery -InstallationPolicy Trusted
          Install-Module -Name Az.Network -Scope CurrentUser -Repository PSGallery -Force
        shell: pwsh -Command "$ProgressPreference = 'SilentlyContinue'; & '{0}'"

      - run: |
          $params = @{
              Path        = "${{ github.workspace }}"
              NuGetApiKey = "${{ secrets.NUGETAPIKEY }}"
              ErrorAction = "Stop"
          }

          Publish-Module @params -Verbose

        shell: pwsh -Command "$ProgressPreference = 'SilentlyContinue'; & '{0}'"
