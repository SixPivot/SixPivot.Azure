name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:

  test:
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v3

      - name: Install Pester Module
        run: |
          Set-PSRepository -Name PSGallery -InstallationPolicy Trusted
          Install-Module Pester -Scope CurrentUser -Repository PSGallery -Force
          Install-Module -Name Az.Network -Scope CurrentUser -Repository PSGallery -Force
        shell: pwsh -Command "$ProgressPreference = 'SilentlyContinue'; & '{0}'"

      - name: Print PATH env variables in runner
        run: |
          Write-Output "PATH (MACHINE):"
          [System.Environment]::GetEnvironmentVariable("Path", "Machine")
          Write-Output ""
          Write-Output "PATH (USER):"
          [System.Environment]::GetEnvironmentVariable("Path", "User")
          Write-Output ""
          Write-Output "PATHEXT (MACHINE):"
          [System.Environment]::GetEnvironmentVariable("PATHEXT", "Machine")
          Write-Output ""
          Write-Output "PATHEXT (USER):"
          [System.Environment]::GetEnvironmentVariable("PATHEXT", "User")
        shell: pwsh -Command "$ProgressPreference = 'SilentlyContinue'; & '{0}'"

      - name: Run Pester Tests
        run: |
          Import-Module Pester

          $cfg = [PesterConfiguration]::Default
          $cfg.Output.Verbosity = 'Detailed'
          $cfg.CodeCoverage.Enabled = $true
          $cfg.Run.Exit = $true

          Invoke-Pester -Configuration $cfg
        shell: pwsh -Command "$ProgressPreference = 'SilentlyContinue'; & '{0}'"

  publish:
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    needs:
      - test
    steps:
      - uses: actions/checkout@v3

      - run: |
          Set-PSRepository -Name PSGallery -InstallationPolicy Trusted
          Install-Module -Name Az.Network -Scope CurrentUser -Repository PSGallery -Force
        shell: pwsh -Command "$ProgressPreference = 'SilentlyContinue'; & '{0}'"

      - run: |
          $params = @{
              Path        = "${{ github.workspace }}"
              NuGetApiKey = "${{ secrets.NUGETAPIKEY }}"
              ErrorAction = "Stop"
          }

          Publish-Module @params -Verbose

        shell: pwsh -Command "$ProgressPreference = 'SilentlyContinue'; & '{0}'"
